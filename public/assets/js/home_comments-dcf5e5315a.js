class PostComments{constructor(e){this.postId=e,this.postContainer=$(`#post-${e}`),this.newCommentForm=$(`#post-${e}-comments-form`),this.createComment(e);let t=this;$(" .delete-comment-button",this.postContainer).each((function(){t.deleteComment($(this))}))}createComment(e){let t=this;this.newCommentForm.submit((function(n){n.preventDefault();$.ajax({url:"/comments/create",type:"POST",data:$(this).serialize(),success:function(n){console.log("manika");let o=t.newCommentDom(n.data.comment);$(`#post-comments-${e}`).prepend(o),t.deleteComment($(" .delete-comment-button",o)),new ToggleLike($(" .comment-likes",o)),new Noty({theme:"relax",text:"Comment published!",type:"success",layout:"topRight",timeout:1500}).show()},error:function(e){console.log(e.responseText)}})}))}newCommentDom(e){return $(`<li id="comment-${e._id}">\n<p>\n<small>\n<a class="delete-comment-button" href="/comments/destroy/${e._id}">X</a>\n<br>\n            <a href="/like/toggle?id=${e._id}&type=Comment" class="comment-likes" data-likes="0">\n                0 Like\n            </a>\n</small>\n\n                            ${e.content}\n                                <br>\n                                <small>\n                                    ${e.user.name}\n</small>\n</p>    \n</li>`)}deleteComment(e){$(e).click((function(t){t.preventDefault(),$.ajax({type:"GET",url:$(e).prop("href"),success:function(e){$(`#comment-${e.data.comment_id}`).remove(),new Noty({theme:"relax",text:"Comment Deleted!",type:"error",layout:"topRight",timeout:1500}).show()},error:function(e){console.log(e.responseText)}})}))}}